{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Contacts/ContactList.module.css","Components/ContactForm/ContactForm.module.css","Components/Container/Container.module.css","Redux/Phonebook/contacts-operations.js","Redux/Phonebook/contacts-selectors.js","Components/ContactForm/ContactForm.js","Components/Contacts/ContactList.js","Components/Contacts/ContactFilter.js","Components/Container/Container.js","Views/PhonebookView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","axios","defaults","baseURL","inputData","dispatch","contact","name","number","actions","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","contactID","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","getFilter","state","phonebook","filter","getContacts","contacts","getLoading","loading","getFilteredContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","ContactForm","useState","setContact","contactsIn","useSelector","contactsSelectors","useDispatch","handleChange","event","currentTarget","prev","className","styles","form","onSubmit","preventDefault","find","alert","contactsOperations","inputForm","type","pattern","title","required","onChange","btnAdd","ContactList","isLoadingContacts","useEffect","color","height","width","style","textAlign","map","id","element","onClick","ContactFilter","searchQuery","search","contactsActions","changeFilter","Container","children","container","PhonebookView"],"mappings":"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","file":"static/js/phonebook.66d0b9a6.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactList_element__3dXGR\",\"contact\":\"ContactList_contact__3PSeP\",\"search\":\"ContactList_search__27OBb\",\"delete\":\"ContactList_delete__11tmB\",\"list\":\"ContactList_list__32lkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"btnAdd\":\"ContactForm_btnAdd__2M8yM\",\"form\":\"ContactForm_form__2IF4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3e1Mh\"};","import axios from \"axios\";\nimport actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(actions.fetchContactsError()));\n};\nconst addContact = (inputData) => (dispatch) => {\n  const contact = {\n    name: inputData.name,\n    number: inputData.number,\n  };\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError()));\n};\nconst deleteContact = (contactID) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactID}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactID)))\n    .catch((error) => dispatch(actions.deleteContactError()));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, fetchContacts };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.phonebook.loading;\nconst getFilter = (state) => state.phonebook.filter;\nconst getContacts = (state) => state.phonebook.contacts;\n\nconst getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return allContacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getLoading,\n  getFilter,\n  getContacts,\n  getFilteredContacts,\n};\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport contactsOperations from \"../../Redux/Phonebook/contacts-operations\";\nimport contactsSelectors from \"../../Redux/Phonebook/contacts-selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ContactForm() {\n  const [contact, setContact] = useState({\n    name: \"\",\n    number: \"\",\n  });\n\n  const contactsIn = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    let name = event.currentTarget.name;\n    let value = event.currentTarget.value;\n    setContact((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (contactsIn.find(({ name }) => name === contact.name)) {\n      alert(contact.name + \"is already in contacts\");\n      return;\n    }\n    dispatch(\n      contactsOperations.addContact({\n        name: contact.name,\n        number: contact.number,\n      })\n    );\n    setContact({ name: \"\", number: \"\" });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={contact.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Phone\n        <input\n          className={styles.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={contact.number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.btnAdd} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  submitted: PropTypes.func,\n  contactsIn: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsOperations from \"../../Redux/Phonebook/contacts-operations\";\nimport contactsSelectors from \"../../Redux/Phonebook/contacts-selectors\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default function ContactList() {\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoadingContacts && (\n        <Loader\n          type=\"TailSpin\"\n          color=\"teal\"\n          height={130}\n          width={130}\n          style={{\n            textAlign: \"center\",\n          }}\n        />\n      )}\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.element}>\n            <p className={styles.contact}>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              className={styles.delete}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  fetchContacts: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport contactsActions from \"../../Redux/Phonebook/contacts-actions\";\nimport contactsSelectors from \"../../Redux/Phonebook/contacts-selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function ContactFilter() {\n  const dispatch = useDispatch();\n  const searchQuery = useSelector(contactsSelectors.getFilter);\n\n  return (\n    <label>\n      Filter contacts by name\n      <input\n        className={styles.search}\n        type=\"text\"\n        value={searchQuery}\n        onChange={(event) =>\n          dispatch(contactsActions.changeFilter(event.currentTarget.value))\n        }\n      />\n    </label>\n  );\n}\n\nContactFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\nexport default Container;\n","import React from \"react\";\nimport ContactForm from \"../Components/ContactForm/ContactForm.js\";\nimport ContactList from \"../Components/Contacts/ContactList\";\nimport ContactFilter from \"../Components/Contacts/ContactFilter\";\nimport Container from \"../Components/Container/Container\";\n\nconst PhonebookView = () => {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default PhonebookView;\n"],"sourceRoot":""}